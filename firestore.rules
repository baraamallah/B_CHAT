
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Anyone can read anyone else's profile
      allow get: if request.auth != null;
    }

    // Friend requests can be created by any authenticated user
    match /friendRequests/{requestId} {
      allow create: if request.auth != null;
      // Requests can be read by the sender or receiver
      allow read: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      // Requests can be updated or deleted by the receiver
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.to;
    }
    
    // Conversations can be read by participants
    match /conversations/{conversationId} {
      allow read, create: if request.auth != null && request.auth.uid in resource.data.participants;
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // Messages can be created by a participant
      match /messages/{messageId} {
        allow create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
        // Messages can be read by a participant
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
        // A user can "delete" (update) their own message
        allow update: if request.auth != null && request.auth.uid == resource.data.senderId;
      }
    }
  }
}

    