
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users
    match /users/{userId} {
      allow read: if isAuth();
      allow create, update: if isOwner(userId);
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
      allow read: if isAuth() && request.auth.uid == resource.data.to;
      allow create: if isAuth();
      allow update, delete: if isAuth() && request.auth.uid == resource.data.to;
    }

    // Conversations & Messages
    match /conversations/{conversationId} {
      allow read, write: if isAuth() && request.auth.uid in resource.data.participants;
      allow create: if isAuth() && request.auth.uid in request.resource.data.participants
                      && request.resource.data.participantDetails[request.auth.uid].displayName is string;

      match /messages/{messageId} {
        allow read, write: if isAuth() && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }
  }
}

    